package flow.subflow.ModifyOrCancel;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Enumeration;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.Properties;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.vis.club.mahindra.api.model.BookingProbability;
import org.vis.club.mahindra.api.model.MemberInformationReq;
import org.vis.club.mahindra.api.model.UpcomingBookingDetailsResponse;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.google.gson.Gson;

import flow.IProjectVariables;

/**
 * A basic servlet which allows a user to define their code, generate
 * any output, and to select where to transition to next.
 * Last generated by Orchestration Designer at: 2023-APR-05  07:51:33 PM
 */
public class WS_GetCVVs extends com.avaya.sce.runtime.BasicServlet {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2023-APR-05  07:51:33 PM
	 */
	public WS_GetCVVs() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components.
	 * You may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent delays.
	 * It's important to design your callflow so that the voice browser (Experienve Portal/IR)
	 * is not waiting too long for a response as this can lead to a poor caller experience.
	 * Additionally, if the response to the client voice browser exceeds the configured
	 * timeout, the platform may throw an "error.badfetch". 
	 *
	 * Using this method, you have access to all session variables through the 
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2023-APR-05  07:51:33 PM
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		getUpcomingCVVFromBkg(mySession);

	}

	private void getUpcomingCVVFromBkg(SCESession mySession) {

		BufferedReader rd = null;
		UpcomingBookingDetailsResponse bkgStatus = null;
		Gson gson = new Gson();

		String info = "";
		String jsonResponse = "";
		try {
			String config = getServletContext().getInitParameter("Configuration");

			Properties properties = loadPropertyFile(config);
			HttpClient client = HttpClientBuilder.create().build();
			String appURL = properties.getProperty("localhost_url")
					.concat(properties.getProperty("localhost_app_name"));
			String bkgURL = appURL.concat(properties.getProperty("upcoming_booking_url"));

			String memberID = mySession.getVariableField(IProjectVariables.MEMBER_DETAILS,
					IProjectVariables.MEMBER_DETAILS_FIELD_MEMBER_ID).getStringValue();

			String memberShipID = mySession.getVariableField(IProjectVariables.MEMBER_DETAILS,
					IProjectVariables.MEMBER_DETAILS_FIELD_MEMBER_SHIP_ID).getStringValue();

			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod or Cancel | memberID, memberShipID: " + memberID + ", " + memberShipID);

			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "upcoming booking | URL: " + bkgURL);

			HttpPost post = new HttpPost(bkgURL);

			post.addHeader("Content-Type", "application/json");

//			StringEntity stringEntity = new StringEntity("{\n" + "\"MemberId\":\"" + memberID + "\",\n"
//					+ "			    \"MembershipId\":\"" + memberShipID + "\"\n" + "}");
//			
//			
			
			MemberInformationReq memberInformationReq=new MemberInformationReq();
			memberInformationReq.setMemberID(memberID);
			memberInformationReq.setMemberShipID(memberShipID);
			
			String json = gson.toJson(memberInformationReq);
			
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "Mod or Cancel | "
					+ "Mod or Can | Upcoming Bkg json req : " + json);
			
			StringEntity stringEntity=new StringEntity(json);
			
			post.setEntity(stringEntity);

			HttpResponse response = client.execute(post);

			rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));

			while ((info = rd.readLine()) != null) {
				jsonResponse += (info);
			}
			bkgStatus = gson.fromJson(jsonResponse, UpcomingBookingDetailsResponse.class);
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "Mod or Cancel | "
					+ "Mod or Can | Upcoming Bkg response: " + bkgStatus);

			List<BookingProbability> bkgListProbability = null;

			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod or Cancel | Upcoming booking api mock info "+bkgStatus);

			
			
			if (bkgStatus != null) {
				bkgListProbability = bkgStatus.getGetBookingProbability();
				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS_CVV).setValue(false);
			} else {
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel | Upcoming booking api response is null\n");
			}

			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod or Cancel  | Upcoming booking api response, bkgListProbability: " + bkgListProbability);

			if (bkgListProbability != null && !bkgListProbability.isEmpty()) {
				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS_CVV).setValue(true);
				String cvvNumAnn = "";
				String[] arr = new String[] { "CMH001.wav", "CMH002.wav", "CMH003.wav", "CMH004.wav", "CMH005.wav",
						"CMH006.wav" };
				
				String menuOptions = "";

				Map<String, BookingProbability> annList = new LinkedHashMap<String, BookingProbability>();

				for (int i = 0; i < bkgListProbability.size(); i++) {
					cvvNumAnn+= arr[i] + "*for_your_booking.wav*" +
						getAudioFileName(bkgListProbability.get(i).getResortName().toLowerCase(), mySession, properties)
						 + "*CMH6001_3.wav*" + "CMH6001_4.wav*" +
						"SS:"+ parseDOB(bkgListProbability.get(i).getCheckIn(), mySession) + ":date" + "*CMH6001_5.wav*" + 
						"SS:"+ parseDOB(bkgListProbability.get(i).getCheckOut(), mySession) + ":date*silence_1500.wav*";
					annList.put(String.valueOf((i+1)), bkgListProbability.get(i));
					menuOptions += (i+1)+",";
					if (i == 5) {
						break;
					}
				}
				
				menuOptions = menuOptions.endsWith(",") ? menuOptions.substring(0, menuOptions.length() - 1) : menuOptions;
				
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel  | Menu options : " + menuOptions);
				
				if (annList != null) {
					mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
							IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_UPCOMING_AVAIL).setValue(true);
					if (annList.size() > 1) {
						mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
								IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_MULTI_BKG_AVAIL).setValue(true);
					} else {
						mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
								IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_MULTI_BKG_AVAIL).setValue(false);
					}
				}
				
				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_CVV__OPTIONS).setValue(menuOptions);

				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_ANN_CVV).setValue(cvvNumAnn);

				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_CVVLIST).setValue(annList);

				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel  | Resort Announcement : " + cvvNumAnn);

				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel  | Announcement List : " + annList);
				
			} else {
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel  | Booking Probability value is null : " + bkgListProbability);
				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS_CVV).setValue(false);
			}

		} catch (IOException e) {
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod or Cancel | Exception While Getting the details of Member Details " + e);
		} finally {
			try {
				rd.close();
			} catch (IOException e) {
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod or Cancel | Exception While Closing Buffered Reader " + e);
			}
		}

	}
	
	private String getAudioFileName(String audioKey, SCESession mySession, Properties properties) {
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, 
				"ModOrCancel | Audio key : " + audioKey);
		String audioFileName = null;
		
		Enumeration<Object> keys = properties.keys();
		
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, 
				"ModOrCancel | Property Keys List : " + keys);
		
		if (keys!=null) {
			while (keys.hasMoreElements()) {
				String key = (String) keys.nextElement();
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "Property Keys |  key : " + key);
				if (key!=null && audioKey!=null && 
						audioKey.toLowerCase().contains(key.toLowerCase())) {
					audioFileName = properties.getProperty(key);
				}
			} 
		} else {
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, 
					"ModOrCancel | there is no keys in property file : " + keys);
		}
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, 
				"ModOrCancel | Audio FileName : " + audioFileName);
		return audioFileName;
	}
	
	private String parseDOB(String bkgDate, SCESession mySession) {

		SimpleDateFormat sdf = null;
		String bookingDate = "";
		mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
				"**************ModOrCancel | Booking Date **************" + bkgDate);
		sdf = new SimpleDateFormat("yyyy-MM-dd");
		try {
//			bookingDate = new SimpleDateFormat("MMddyyyy").format(sdf.parse(bkgDate));
			
			bookingDate = new SimpleDateFormat("yyyyMMdd").format(sdf.parse(bkgDate));
			
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"**************ModOrCancel | Parsed Date **************" + bookingDate);
		} catch (ParseException e) {
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"**************ModOrCancel | Exception while formatting Date ********" + e);
		}
		return bookingDate;
	}
	
	/**
     * @param config 
     * @return
     * @throws FileNotFoundException
     * @throws IOException
     */
	private static Properties loadPropertyFile(String config) throws FileNotFoundException, IOException {
		FileReader reader = null;
		reader = new FileReader(config);
		Properties properties = new Properties();
		properties.load(reader);
		return properties;
	}

	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: 2023-SEP-05  01:01:23 PM
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("ModifyOrCancel-IsUpcomingBkgAvail", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
