package flow.subflow.ModifyOrCancel;

import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Properties;

import org.apache.http.HttpResponse;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.HttpClientBuilder;
import org.vis.club.mahindra.api.model.BookingProbability;
import org.vis.club.mahindra.api.model.ResendCVResponse;

import com.avaya.sce.runtimecommon.ITraceInfo;
import com.avaya.sce.runtimecommon.SCESession;
import com.google.gson.Gson;

import flow.AppConstant;
import flow.IProjectVariables;

/**
 * A basic servlet which allows a user to define their code, generate
 * any output, and to select where to transition to next.
 * Last generated by Orchestration Designer at: 2023-MAR-29  12:53:33 PM
 */
public class WS_EmailConfirmationVoucher extends com.avaya.sce.runtime.BasicServlet {

	//{{START:CLASS:FIELDS
	//}}END:CLASS:FIELDS

	/**
	 * Default constructor
	 * Last generated by Orchestration Designer at: 2023-MAR-29  12:53:33 PM
	 */
	public WS_EmailConfirmationVoucher() {
		//{{START:CLASS:CONSTRUCTOR
		super();
		//}}END:CLASS:CONSTRUCTOR
	}

	/**
	 * This method allows for custom integration with other Java components.
	 * You may use Java for sophisticated logic or to integrate with custom
	 * connectors (i.e. JMS, custom web services, sockets, XML, JAXB, etc.)
	 *
	 * Any custom code added here should work as efficiently as possible to prevent delays.
	 * It's important to design your callflow so that the voice browser (Experienve Portal/IR)
	 * is not waiting too long for a response as this can lead to a poor caller experience.
	 * Additionally, if the response to the client voice browser exceeds the configured
	 * timeout, the platform may throw an "error.badfetch". 
	 *
	 * Using this method, you have access to all session variables through the 
	 * SCESession object.
	 *
	 * The code generator will *** NOT *** overwrite this method in the future.
	 * Last generated by Orchestration Designer at: 2023-MAR-29  12:53:33 PM
	 */
	public void servletImplementation(com.avaya.sce.runtimecommon.SCESession mySession) {

		// TODO: Add your code here!
		
		resendCV(mySession);
	}
	
	
	private ResendCVResponse resendCV(SCESession mySession) {
		BufferedReader rd = null;
		ResendCVResponse resendCVResponse = null;
		Gson gson = new Gson();
		
		String info = "";
		String jsonResponse = "";
		String config = getServletContext().getInitParameter("Configuration");

		try {
			Properties properties = loadPropertyFile(config);
			HttpClient client = HttpClientBuilder.create().build();
			String appURL = properties.getProperty(AppConstant.LOCALHOST_URL)
							.concat(properties.getProperty(AppConstant.LOCALHOST_APP_NAME));
			
			String userLangURL = appURL
							.concat(properties.getProperty(AppConstant.RESEND_CV_URL));
			String  cvvNo =null;
		
			@SuppressWarnings("unchecked")
			LinkedHashMap<String, BookingProbability> cvvList = (LinkedHashMap<String, BookingProbability>)
					mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
					IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_CVVLIST).getObjectValue();
			
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod Cancel | cvvList : " + cvvList);
			
			if (cvvList!=null) {
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "Mod Cancel | CVV List: " + cvvList);
				String userSelectedCVV = mySession
						.getVariableField(IProjectVariables.CVVMENU, IProjectVariables.CVVMENU_FIELD_VALUE)
						.getStringValue();
				
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod Cancel | userSelectedCVV : " + userSelectedCVV);
				if (userSelectedCVV != null) {
					for (String cvvNums : cvvList.keySet()) {
						if (cvvNums.equals(userSelectedCVV)) {
							cvvNo = cvvList.get(cvvNums).getcVNo();
							mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
									"Mod Cancel | cvv No : " + cvvNo);
						}
					}

				} else {
					mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
							IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS).setValue(false);
					mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
							"Mod Cancel | UserSelected menu option is null, userSelectedCVV: " + userSelectedCVV);
				}
				
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO, "Mod Cancel | URL: " + userLangURL);
				HttpPost post = new HttpPost(userLangURL);
				post.addHeader("Content-Type", "application/json");
				
				
				Map<String, String> requ=new HashMap<String, String>();
				requ.put("CVNO", cvvNo);
				String jsonReq = gson.toJson(requ);
				
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod Cancel | json request : " + jsonReq);
				
//				StringEntity stringEntity = new StringEntity(
//						"{\n" + " \"CVNO\":\"" + cvvNo + "\",\n" + "}");
				StringEntity stringEntity = new StringEntity(jsonReq);
				
				post.setEntity(stringEntity);
				HttpResponse response = client.execute(post);
				rd = new BufferedReader(new InputStreamReader(response.getEntity().getContent()));
				while ((info = rd.readLine()) != null) {
					jsonResponse += (info);
				}
				resendCVResponse = gson.fromJson(jsonResponse, ResendCVResponse.class);
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod Cancel | resendCVResponse: " + resendCVResponse);
				if (resendCVResponse != null && resendCVResponse.getResponseMessage().equalsIgnoreCase("success")) {
					mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
							IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS).setValue(true);
				} else {
					mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
							IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS).setValue(false);
				} 
			} else {
				mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
						IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS).setValue(false);
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod Cancel | CVV List from API is null: " + cvvList);
			}
			
		} catch (IOException e) {
			mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
					"Mod Cancel | Exception While Getting the details of resendCVResponse " + e);
			mySession.getVariableField(IProjectVariables.MODIFY_CANCEL_FLOW,
					IProjectVariables.MODIFY_CANCEL_FLOW_FIELD_REQ_SUCCESS)
					.setValue(false);
		} finally {
			try {
				rd.close();
			} catch (IOException e) {
				mySession.getTraceOutput().writeln(ITraceInfo.TRACE_LEVEL_INFO,
						"Mod Cancel | Exception While Closing Buffered Reader " + e);
			}
		}
		return resendCVResponse;
	
		
	}
	  /**
     * @param config 
     * @return
     * @throws FileNotFoundException
     * @throws IOException
     */
	private static Properties loadPropertyFile(String config) throws FileNotFoundException, IOException {
		FileReader reader = null;
		reader = new FileReader(config);
		Properties properties = new Properties();
		properties.load(reader);
		return properties;
	}
	
	/**
	 * Builds the list of branches that are defined for this servlet object.
	 * This list is built automatically by defining Goto nodes in the call flow editor.
	 * It is the programmer's responsibilty to provide at least one enabled Goto.<BR>
	 *
	 * The user should override updateBranches() to determine which Goto that the
	 * framework will activate.  If there is not at least one enabled Goto item, 
	 * the framework will throw a runtime exception.<BR>
	 *
	 * This method is generated automatically and changes to it may
	 * be overwritten next time code is generated.  To modify the list
	 * of branches for the flow item, override:
	 *     <code>updateBranches(Collection branches, SCESession mySession)</code>
	 *
	 * @return a Collection of <code>com.avaya.sce.runtime.Goto</code>
	 * objects that will be evaluated at runtime.  If there are no gotos
	 * defined in the Servlet node, then this returns null.
	 * Last generated by Orchestration Designer at: 2023-SEP-05  01:01:23 PM
	 */
	public java.util.Collection getBranches(com.avaya.sce.runtimecommon.SCESession mySession) {
		java.util.List list = null;
		com.avaya.sce.runtime.Goto aGoto = null;
		list = new java.util.ArrayList(1);

		aGoto = new com.avaya.sce.runtime.Goto("ModifyOrCancel-ReqSuccess", 0, true, "Default");
		list.add(aGoto);

		return list;
	}
}
